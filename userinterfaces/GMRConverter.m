function GMRConverter

% only one instance of the GUI running
mfig = findobj('Name', 'GMR Converter');
        if ~isempty(mfig)
            delete(mfig)
        end
        
% set global structures
gui      = createInterface();
fdata    = struct();
% defaults


    function gui = createInterface()
        
        gui = struct();
        screensz = get(0,'ScreenSize');
        
        %% GENERATE CONTROLS PANEL ----------------------------------------
        gui.panel_controls.figureid = figure( ...
            'Name', 'GMR Converter', ...
            'NumberTitle', 'off', ...
            'MenuBar', 'none', ...
            'Toolbar', 'none', ...
            'HandleVisibility', 'on',...
            'KeyPressFcn',@dokeyboardshortcut); % enable shortcuts
        
        set(gui.panel_controls.figureid, 'Position', [5 screensz(4)-600 800 550])
        
        % Set default panel settings
        %uiextras.set(gui.panel_controls.figureid, 'DefaultBoxPanelFontSize', 12);
        %uiextras.set(gui.panel_controls.figureid, 'DefaultBoxPanelFontWeight', 'bold')
        %uiextras.set(gui.panel_controls.figureid, 'DefaultBoxPanelPadding', 5)
        %uiextras.set(gui.panel_controls.figureid, 'DefaultHBoxPadding', 2)
        
        %% MAKE MENU
        % + Quit menu
        gui.panel_controls.menu_quit = uimenu(gui.panel_controls.figureid, 'Label', 'Quit');
        uimenu(gui.panel_controls.menu_quit, ...
            'Label', 'Quit', ...
            'Callback', @onQuit);
        
        % + File Menu
        gui.panel_controls.menu_file = uimenu(gui.panel_controls.figureid, 'Label', 'File');
        uimenu(gui.panel_controls.menu_file, ...
            'Label', 'Load GMR Data Header', ...
            'Callback', @onLoadGMRHeader);
        uimenu(gui.panel_controls.menu_file, ...
            'Label', 'Select File Destination', ...
            'Callback', @onSelectFileDestination);
        
        % + Help menu
        gui.panel_controls.menu_help = uimenu(gui.panel_controls.figureid, 'Label', 'Help' );
        uimenu(gui.panel_controls.menu_help, ...
            'Label', 'Documentation', ...
            'Callback', @onHelp);
        
        
%% CREATE UICONTROLS ----------------------------------------------
        mainbox = uiextras.VBox('Parent', gui.panel_controls.figureid);
        
        boxV  = uiextras.BoxPanel(...
            'Parent', mainbox, ...
            'Title', 'File and Status');
        box_Control  = uiextras.VBox('Parent', boxV);
        uicontrol(...
            'Style', 'Text',  'HorizontalAlignment', 'left', ...
            'Parent', box_Control, ...
            'String', 'Status');
        gui.panel_controls.edit_status = uicontrol(...
            'Style', 'Edit', ...
            'Parent', box_Control, ...
            'Enable', 'off', ...
            'BackgroundColor', [0 1 0], ...
            'String', 'Idle...');         
        uicontrol(...
            'Style', 'Text',  'HorizontalAlignment', 'left', ...
            'Parent', box_Control, ...
            'String', 'GMR Header');
        gui.GMRfilepath = uicontrol(...
            'Style', 'Edit', ...
            'Parent', box_Control, ...
            'Enable', 'on', ...
            'BackgroundColor', [0 1 0], ...
            'String', 'GMR filepath',...
            'Callback', @onEditPath); 
        uicontrol(...
            'Style', 'Text', 'HorizontalAlignment', 'left', ...
            'Parent', box_Control, ...
            'String', 'Destination of Converted Files');
        gui.Convertedfilepath = uicontrol(...
            'Style', 'Edit', ...
            'Parent', box_Control, ...
            'Enable', 'off', ...
            'BackgroundColor', [0 1 0], ...
            'String', 'filepath for converted'); 
        set(box_Control, 'Sizes', [20 30 20 30 20 30])
        
        boxH = uiextras.HBox('Parent', mainbox);
        box1 = uiextras.VBox('Parent', boxH);
        box_UserSet  = uiextras.BoxPanel(...
            'Parent', box1, ...
            'Title', 'User Information');
        box_UserSetv1 = uiextras.VBox('Parent', box_UserSet);
        gui.UserInfoTable = uitable('Parent', box_UserSetv1);
        set(gui.UserInfoTable, ...
            'ColumnName', {'Ch1', 'Ch2', 'Ch3', 'Ch4', 'Ch5', 'Ch6', 'Ch7', 'Ch8'}, ...
            'ColumnWidth', {50 50 50 50 50 50 50 50}, ...
            'RowName', {'Loop Task', 'Loop Type', 'Loop Size', 'Number of Turns'}, ...
            'ColumnEditable', false, ...
            'CellEditCallback', @onModTabUser);%
        uicontrol(...
            'Style', 'Text', ...
            'Parent', box_UserSetv1, ...
            'String', '');
        uicontrol(...
            'Style', 'Text', ...
            'Parent', box_UserSetv1, ...
            'String', 'Loop Task - 0: unconnected, 1: Tx/Rx, 2: Rx, 3: NC');
        uicontrol(...
            'Style', 'Text', ...
            'Parent', box_UserSetv1, ...
            'String', 'Loop Type - 1: circular, 2: square, 3: circular 8, 4: square 8');
        uicontrol(...
            'Style', 'Text', ...
            'Parent', box_UserSetv1, ...
            'String', 'Loop Size - diameter for circular , side length for square');
        set(box_UserSetv1, 'Sizes', [-1 5 18 18 18])
        
        box_GMRSet  = uiextras.BoxPanel(...
            'Parent', box1, ...
            'Title', 'GMR Information');
        gui.GMRInfoTable = uitable('Parent', box_GMRSet);
        set(gui.GMRInfoTable, ...
            'ColumnName', [], ...
            'ColumnWidth', {100}, ...
            'RowName', {'Pulse sequence ID','Frequency [Hz]','Pulse length [ms]','Pulse delay [ms]','# Stacks','# Pulsemoments','Dead time [ms]','DAQ version','Tx version'}, ...
            'ColumnEditable', false);
        
        
        box2  = uiextras.BoxPanel(...
            'Parent', boxH, ...
            'Title', 'Preview / Conversion');
        box_Run_Preview = uiextras.VBox('Parent', box2);
        gui.PreviewTable = uitable('Parent', box_Run_Preview);
        set(gui.PreviewTable, ...
            'CellEditCallback', @onEditPreviewTable, ...
            'ColumnName', {'select', '#'}, ...
            'ColumnWidth', {50 50}, ...
            'ColumnEditable', [true false], ...
            'ColumnFormat', {'logical','numeric'},...
            'RowName', []);
        gui.process.pushbutton_preview = uicontrol(...
            'Style', 'Pushbutton', ...
            'Enable', 'on',...
            'Parent', box_Run_Preview, ...
            'String', 'Data preview',...
            'Callback', @onPreview);
        gui.process.pushbutton_run = uicontrol(...
            'Style', 'Pushbutton', ...
            'Enable', 'on',...
            'Parent', box_Run_Preview, ...
            'String', 'Run conversion',...
            'Callback', @onRun);
        set(box1, 'Sizes', [200 210])
        set(box_Run_Preview, 'Sizes', [300 30 30])
        
        set(boxH, 'Sizes', [600 200])
        
        set(mainbox, 'Sizes',[160 -1])
        
        
    end
    function onEditPath(a,b)
        onLoadGMRHeader(gui.panel_controls.menu_file,1)
    end
    function onLoadGMRHeader(a,b)
        if b % get file from edit path
            file               = get(gui.GMRfilepath,'String');
            [fdata.headerpath,fdata.headerfilename] = fileparts(file);
            fdata.headerpath  = [fdata.headerpath filesep];
            fdata.convpath     = [fdata.headerpath 'GMR2NUMIS' filesep];
        else % get file from dialog   
            inifile = mrs_readinifile;
            if strcmp(inifile.MRSData.file,'none') == 1
                inifile.MRSData.path = [pwd filesep];
            end
            [fdata.headerfilename,fdata.headerpath] = uigetfile({'*.*; *.*','pick header for GMR'},...
                'MultiSelect','off',...
                'Open GMR Header File',...
                [inifile.MRSData.path]);
            fdata.convpath     = [fdata.headerpath 'GMR2NUMIS' filesep];
        end
        
        % get header
        fdata.header          = openGMRheader(fullfile(fdata.headerpath,fdata.headerfilename));
        fdata.header.filename = fdata.headerfilename;
        fdata.header.path     = fdata.headerpath;
                        
        for irx=1:fdata.header.nrx
            switch fdata.header.coil(irx).task
                case 0 % detection
                    fdata.UserData(irx).looptask  = 1;
                case 1 % noise
                    fdata.UserData(irx).looptask  = 3;
                case 2
                    fdata.UserData(irx).looptask  = 0;
            end
            switch fdata.header.coil(irx).shape
                case 0 % GMR square
                    fdata.UserData(irx).looptype  = 2;
                case 1% GMR circ
                    fdata.UserData(irx).looptype  = 1;
            end
            fdata.UserData(irx).loopsize  = fdata.header.coil(irx).size;
            fdata.UserData(irx).nturns    = fdata.header.coil(irx).nturns;
        end
        InfoTable = [fdata.UserData(1).looptask fdata.UserData(1).looptype fdata.UserData(1).loopsize fdata.UserData(1).nturns]';
        for irx=2:fdata.header.nrx
            InfoTable = [InfoTable [fdata.UserData(irx).looptask fdata.UserData(irx).looptype fdata.UserData(irx).loopsize fdata.UserData(irx).nturns]'];
        end
        
        set(gui.GMRInfoTable,'Data',[fdata.header.sequenceID; fdata.header.fT; ...
                                     fdata.header.tau_p*1e3; fdata.header.tau_d*1e3; fdata.header.nrec; ...
                                     fdata.header.nQ;fdata.header.tau_dead*1e3;...
                                     fdata.header.DAQversion;fdata.header.TXversion]);
        set(gui.GMRfilepath,'String',fullfile(fdata.headerpath,fdata.headerfilename));
        set(gui.Convertedfilepath,'String',fdata.convpath);
        
        set(gui.UserInfoTable, 'ColumnEditable', true, ...
            'Data',InfoTable);%
        
        tabledata      = cell(length(fdata.header.fileID),1);
        tabledata(:,1) = {false};
        tabledata(1,1) = {true};
        for nF=1:length( fdata.header.fileID)
            tabledata(nF,2) = { fdata.header.fileID(nF)};
        end
        set(gui.PreviewTable,'Data', tabledata);
        fdata.previewFileID=1;
        
    end

    function onSelectFileDestination(a,b)
        path = uigetdir;
        fdata.convpath = [path filesep];
        set(gui.Convertedfilepath,'String',fdata.convpath);
    end

    function onModTabUser(hTable, EdtData)
        tabData=get(hTable,'Data');
        for irx=1:fdata.header.nrx
            fdata.UserData(irx).looptask  = tabData(1,irx);
            fdata.UserData(irx).looptype  = tabData(2,irx);
            fdata.UserData(irx).loopsize  = tabData(3,irx);
            fdata.UserData(irx).nturns    = tabData(4,irx);
        end
    end
    function onEditPreviewTable(hTable, EdtData)
        tabData = get(hTable,'Data');
        tabData(fdata.previewFileID,1) = {false};
        
        fdata.previewFileID = EdtData.Indices(1);
        set(hTable,'Data',tabData);
    end
    function onRun(a,b)      
        convGMR2NumisPoly(gui,fdata);
    end

    function onPreview(a,b)
        previewGMRData(gui,fdata,fdata.previewFileID);
    end


    function onQuit(a,b)
        mfig = findobj('Name', 'GMR Converter');
        if ~isempty(mfig)mfig
            delete(mfig)
        end
    end
end